name: Riot CI
on:
  push:
    paths:
    - 'modules/riot/**'
  pull_request:
    paths:
    - 'modules/riot/**'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 1.x
      - name: Lint
        run: deno lint modules/riot/ --unstable

  lock:
    name: Check Lock
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 1.x
      - name: Lock validate
        run: deno cache --lock=modules/riot/lock.json  --unstable modules/riot/mod.ts

  test:
    name: '${{ matrix.kind }} ${{ matrix.os }}'
    runs-on: '${{ matrix.os }}'
    if: '!contains(github.event.head_commit.message, ''[skip ci]'')'
    strategy:
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
          - windows-latest
    env:
      GH_ACTIONS: true
      DENO_BUILD_MODE: release
      V8_BINARY: true
    steps:
      - uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 1.x
      - name: Tests
        run: deno test modules/riot/ --allow-read --allow-write --unstable --allow-env --allow-net
